buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.6.3"
group = "com.blakebr0.mysticalagriculture" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mysticalagriculture[1.12]"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {	
	maven {
		url = "http://dvs1.progwml6.com/files/maven"
	}
	
	maven {
		url = "http://tehnut.info/maven"
	}
}

minecraft {
    version = "1.12-14.21.1.2415"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20170731"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
	deobfCompile "mezz.jei:jei_1.12:4.7.0.67:api"
	runtime "mezz.jei:jei_1.12:4.7.0.67"
	
	deobfCompile "mcp.mobius.waila:Hwyla:1.8.19-B33_1.12"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
}